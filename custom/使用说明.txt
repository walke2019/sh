================================================================================
                        自定义工具箱 - 使用说明
================================================================================

📦 已创建的文件和目录：

custom/
├── custom_main.sh          # 主入口脚本
├── integrate.sh            # 集成向导
├── README.md               # 详细说明文档
├── 快速开始.md             # 快速开始指南
├── 使用说明.txt            # 本文件
│
├── tools/                  # 工具脚本目录
│   ├── tool1.sh           # 示例工具 1 - 系统信息
│   ├── tool2.sh           # 示例工具 2 - 目录查看
│   └── tool3.sh           # 示例工具 3 - 磁盘使用
│
└── config/                 # 配置文件目录
    └── settings.conf      # 主配置文件

docs/
├── 自定义工具箱创建指南.md  # 详细创建指南
└── 项目结构说明.md          # 项目结构说明

.gitignore                  # Git 忽略配置

================================================================================
🚀 快速开始
================================================================================

方法一：直接运行（推荐）
------------------------
在项目根目录下执行：
    bash custom/custom_main.sh

方法二：使用集成向导
------------------------
1. 运行集成脚本：
    bash custom/integrate.sh

2. 按照提示操作，可以创建快捷命令 'ctool'

3. 使配置生效：
    source ~/.bashrc

4. 使用快捷命令：
    ctool

方法三：赋予执行权限
------------------------
1. 赋予权限：
    chmod +x custom/custom_main.sh

2. 直接运行：
    ./custom/custom_main.sh

================================================================================
📝 添加新工具
================================================================================

步骤 1：创建工具脚本
------------------------
在 custom/tools/ 目录下创建新的 .sh 文件：
    nano custom/tools/my_tool.sh

步骤 2：编写工具代码
------------------------
参考 tool1.sh、tool2.sh、tool3.sh 的示例代码

步骤 3：赋予执行权限
------------------------
    chmod +x custom/tools/my_tool.sh

步骤 4：添加到菜单
------------------------
编辑 custom/custom_main.sh，在菜单中添加新选项

步骤 5：测试运行
------------------------
    bash custom/custom_main.sh

================================================================================
⚙️ 配置管理
================================================================================

配置文件位置：
    custom/config/settings.conf

编辑配置：
    nano custom/config/settings.conf

在工具中使用配置：
    source "$(dirname "$0")/../config/settings.conf"
    echo "配置值：${CUSTOM_SETTING_1}"

================================================================================
📚 文档位置
================================================================================

详细指南：
    docs/自定义工具箱创建指南.md    - 完整的创建和使用指南
    docs/项目结构说明.md            - 项目结构详细说明

快速参考：
    custom/README.md                 - 自定义工具箱说明
    custom/快速开始.md               - 快速上手指南

================================================================================
⚠️ 重要提示
================================================================================

1. 不要修改上游文件
   - kejilion.sh 是上游主脚本，不要直接修改
   - 所有自定义功能放在 custom/ 目录下

2. 配置文件管理
   - 不要在脚本中硬编码敏感信息
   - 使用配置文件或环境变量

3. 定期备份
   - 重要配置和数据定期备份
   - 可以使用 Git 进行版本控制

4. 测试环境
   - 新功能先在测试环境验证
   - 确认无误后再部署到生产环境

5. 脚本权限
   - 确保所有 .sh 文件有执行权限
   - 使用 chmod +x 命令赋予权限

================================================================================
🔄 更新维护
================================================================================

同步上游更新：
    git fetch upstream
    git merge upstream/main

添加新工具：
    1. 创建工具脚本
    2. 添加到菜单
    3. 测试功能
    4. 提交更改

================================================================================
🆘 常见问题
================================================================================

Q: 如何快速启动自定义工具箱？
A: 使用 bash custom/custom_main.sh 或创建别名 ctool

Q: 工具脚本无法执行？
A: 检查是否赋予了执行权限：chmod +x custom/tools/your_tool.sh

Q: 如何在 Windows 上开发？
A: 使用 WSL (Windows Subsystem for Linux) 或 Git Bash

Q: 如何调试脚本？
A: 使用 bash -x custom/tools/your_tool.sh 启用调试模式

Q: 更新上游后自定义功能失效？
A: 检查路径引用和依赖的函数是否有变化

================================================================================
📞 获取帮助
================================================================================

上游项目：
    https://github.com/kejilion/sh

文档位置：
    docs/ 目录下的所有 Markdown 文件

示例代码：
    custom/tools/ 目录下的示例脚本

================================================================================
✨ 下一步
================================================================================

1. ✅ 阅读快速开始指南：custom/快速开始.md
2. ✅ 查看示例工具：custom/tools/tool*.sh
3. ✅ 创建你的第一个工具
4. ✅ 自定义配置文件
5. ✅ 分享给团队使用

祝你使用愉快！🚀

================================================================================
最后更新：2025-01-25
================================================================================
